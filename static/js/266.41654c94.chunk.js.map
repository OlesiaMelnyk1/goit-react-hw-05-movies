{"version":3,"file":"static/js/266.41654c94.chunk.js","mappings":"2LACA,EAA4B,8BAA5B,EAAoE,4BAApE,EAAiH,mCAAjH,EAAoK,kC,kBCMvJA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GACV,OACE,yBACE,UAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMT,GACfE,UAAWC,EAHb,WAKE,gBACEO,IACEL,EAAMM,YAAN,UAhBF,kCAiBmBN,EAAMM,aADvB,UAEOC,GAETC,IAAKR,EAAMS,MACXZ,UAAWC,KAGb,gBAAKD,UAAWC,EAAhB,SAAqCE,EAAMS,YAhBtCT,EAAME,GAoBlB,KAGN,C,2HCGD,UAjCA,WACE,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBJ,GAAa,GADG,SAGdA,GAAa,GAHC,UAMJK,EAAAA,EAAAA,MANI,gBAKKxB,EALL,EAKZyB,KAAQC,QAEVT,EAAUjB,GAPI,kDASdqB,EAAS,KAAMM,SATD,yBAWdR,GAAa,GAXC,6EAAH,qDAcfI,GACD,GAAE,KAGD,gCACE,eAAIpB,UAAWC,EAAAA,EAAAA,SAAf,yBACCc,IAAa,SAAC,IAAD,IACbE,IAAS,8EACV,SAAC,IAAD,CAAYpB,OAAQA,MAGzB,C,+LCnCD4B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHL,EAAmB,mCAAG,oGACdI,EAAAA,EAAAA,IAAA,sCAAyCC,IAD3B,cAC3BJ,EAD2B,yBAE1BA,GAF0B,2CAAH,qDAKnBK,EAAiB,mCAAG,WAAMC,GAAN,yFACRH,EAAAA,EAAAA,IAAA,8BACEG,EADF,oBACmBF,IAFX,uBACvBJ,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjBO,EAAiB,mCAAG,WAAMxB,GAAN,yFACRoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,oBAAkCqB,IAD1B,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBQ,EAAgB,mCAAG,WAAMzB,GAAN,yFACPoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,4BAA0CqB,IADnC,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBS,EAAiB,mCAAG,WAAM1B,GAAN,yFACRoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,4BAA0CqB,IADlC,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD,oBC1B9B,KAAgB,WAAa,iCAAiC,eAAiB,qCAAqC,eAAiB,qCAAqC,SAAW,+BAA+B,eAAiB,qCAAqC,WAAa,iC","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","pages/Home.js","service/api.js","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"listImg\":\"MoviesList_listImg__9Gh2D\",\"movieListTitle\":\"MoviesList_movieListTitle__DH1EE\",\"movieListLink\":\"MoviesList_movieListLink__uHraS\"};","import { Link, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport css from './MoviesList.module.css';\nimport poster from '../images/cinemaPoster.jpg';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              className={css.movieListLink}\n            >\n              <img\n                src={\n                  movie.poster_path\n                    ? `${IMG_URL + movie.poster_path}`\n                    : `${poster}`\n                }\n                alt={movie.title}\n                className={css.listImg}\n              />\n\n              <div className={css.movieListTitle}>{movie.title}</div>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'service/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        setIsLoading(true);\n        const {\n          data: { results: movies },\n        } = await fetchTrendingMovies();\n        setMovies(movies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <section>\n      <h2 className={css.trending}>Trending...</h2>\n      {isLoading && <Loader />}\n      {error && <p>Sorry, an error occurred! Please try again later!</p>}\n      <MoviesList movies={movies}></MoviesList>\n    </section>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5d916df58dcec69f374b2e5893a8bbbf';\n\nexport const fetchTrendingMovies = async () => {\n  const data = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"MovieDetails_backButton__0nbPy\",\"backButtonLink\":\"MovieDetails_backButtonLink__kYaXN\",\"additionalInfo\":\"MovieDetails_additionalInfo__TgRub\",\"trending\":\"MovieDetails_trending__mA0zh\",\"listLinkReview\":\"MovieDetails_listLinkReview__gpymO\",\"linkReview\":\"MovieDetails_linkReview__WL3A-\"};"],"names":["MoviesList","movies","location","useLocation","className","css","map","movie","to","id","state","from","src","poster_path","poster","alt","title","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","getMovies","fetchTrendingMovies","data","results","message","axios","API_KEY","fetchMovieByQuery","query","fetchMovieDetails","fetchMovieActors","fetchMovieReviews"],"sourceRoot":""}